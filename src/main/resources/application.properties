spring.datasource.url=jdbc:mysql://localhost:3306/videoclub_app?createDatabaseIfNotExist=true
spring.datasource.username=adrian
spring.datasource.password=usuario
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#datasource
spring.datasource.name=proyectoLAT
spring.datasource.generate-unique-name=false

#jpa
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

spring.jpa.generate-ddl=true
#Control de grano fino de generación de ddl con hibernate (implementación de JPA utilizada por spring-data por defecto)
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

#TEORÍA jpa ddl
#En Spring/Spring-Boot, la base de datos SQL se puede inicializar de diferentes maneras.
#JPA tiene características para la generación de DDL, y estas pueden configurarse para ejecutarse en el inicio contra la base de datos. Esto se controla a través de dos propiedades externas:
#
#spring.jpa.generate-ddl (booleano) activa y desactiva la función y es independiente del proveedor.
#spring.jpa.hibernate.ddl-auto (enum) es una característica de Hibernate que controla el comportamiento de una manera más detallada. Consulte a continuación para obtener más detalles.
#Los valores de propiedad de Hibernate son: create, update, create-drop(default), validate y none:
#
#create: Hibernate primero elimina las tablas existentes y luego crea nuevas tablas
#upate: el modelo de objeto creado en función de las asignaciones (anotaciones o XML) se compara con el esquema existente y luego Hibernate actualiza el esquema de acuerdo con la diferencia. Nunca elimina las tablas o columnas existentes, incluso si la aplicación ya no las necesita.
#create-drop: similar a create, con la adición de que Hibernate eliminará la base de datos después de que se completen todas las operaciones. Normalmente se utiliza para pruebas unitarias.
#validate: Hibernate solo valida si las tablas y columnas existen; de lo contrario, arroja una excepción
#none: este valor apaga efectivamente la generación de DDL. Recomendable para entorno de producción.

#jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false